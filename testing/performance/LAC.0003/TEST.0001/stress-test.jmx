<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="requestGroup1">
        <stringProp name="testclass">kg.apc.jmeter.threads.UltimateThreadGroup</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">${__P(iterations,-1)}</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1732119384">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
          <collectionProp name="-1040973976">
            <stringProp name="1603">25</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="49710">240</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
          <collectionProp name="1460852615">
            <stringProp name="1691">50</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
          <collectionProp name="-1541772299">
            <stringProp name="48625">100</stringProp>
            <stringProp name="48873">180</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="1567">10</stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LAC.0003-TEST.0001-Stress-Test-Service1">
          <stringProp name="HTTPSampler.domain">dcvx-jmtapp-g2.mch.moc.sgps</stringProp>
          <stringProp name="HTTPSampler.port">8082</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/service1</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LAC.0003-TEST.0001-Stress-Test-Service2">
          <stringProp name="HTTPSampler.domain">dcvx-jmtapp-g2.mch.moc.sgps</stringProp>
          <stringProp name="HTTPSampler.port">8082</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/service2</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="testName" elementType="Argument">
              <stringProp name="Argument.name">testName</stringProp>
              <stringProp name="Argument.value">LAC.0003-TEST.0001-Stress-Test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connectionString" elementType="Argument">
              <stringProp name="Argument.name">connectionString</stringProp>
              <stringProp name="Argument.value">https://metric-api.newrelic.com/metric/v1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="metricName" elementType="Argument">
              <stringProp name="Argument.name">metricName</stringProp>
              <stringProp name="Argument.value">jmeter.metric</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="clientName" elementType="Argument">
              <stringProp name="Argument.name">clientName</stringProp>
              <stringProp name="Argument.value">ClientName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="environment" elementType="Argument">
              <stringProp name="Argument.name">environment</stringProp>
              <stringProp name="Argument.value">PP</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="licenceKey" elementType="Argument">
              <stringProp name="Argument.name">licenceKey</stringProp>
              <stringProp name="Argument.value">67cf82a47bcda1131494dac6e30661b2FFFFNRAL</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="useRegexForSamplerList" elementType="Argument">
              <stringProp name="Argument.name">useRegexForSamplerList</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="metricBatchSize" elementType="Argument">
              <stringProp name="Argument.name">metricBatchSize</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">io.github.darrensmithwtc.jmeter.backendlistener.newrelic.NewRelicBackendClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
